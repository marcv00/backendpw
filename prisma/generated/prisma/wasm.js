
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  correo: 'correo',
  contrasena: 'contrasena',
  rol: 'rol',
  nombre: 'nombre',
  apellido: 'apellido'
};

exports.Prisma.RelationLoadStrategy = {
  query: 'query',
  join: 'join'
};

exports.Prisma.JuegoScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descripcion: 'descripcion',
  precio: 'precio',
  porcentajeOferta: 'porcentajeOferta',
  trailerUrl: 'trailerUrl',
  rating: 'rating',
  fechaLanzamiento: 'fechaLanzamiento',
  fechaSubida: 'fechaSubida',
  slug: 'slug',
  reviewJuego: 'reviewJuego'
};

exports.Prisma.NoticiaScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  slug: 'slug',
  tiempoLectura: 'tiempoLectura',
  fechaPub: 'fechaPub',
  texto: 'texto',
  resumen: 'resumen',
  fotoId: 'fotoId'
};

exports.Prisma.FotoScalarFieldEnum = {
  id: 'id',
  url: 'url',
  juegoId: 'juegoId'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.PlataformaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  color: 'color'
};

exports.Prisma.VentaScalarFieldEnum = {
  id: 'id',
  total: 'total',
  fechaVenta: 'fechaVenta',
  usuarioId: 'usuarioId'
};

exports.Prisma.JuegoXVentaScalarFieldEnum = {
  id: 'id',
  juegoId: 'juegoId',
  ventaId: 'ventaId'
};

exports.Prisma.JuegoXUsuarioScalarFieldEnum = {
  id: 'id',
  juegoId: 'juegoId',
  usuarioId: 'usuarioId'
};

exports.Prisma.ClaveScalarFieldEnum = {
  id: 'id',
  texto: 'texto',
  usada: 'usada',
  juegoId: 'juegoId',
  ventaId: 'ventaId'
};

exports.Prisma.CategoriaXJuegoScalarFieldEnum = {
  id: 'id',
  juegoId: 'juegoId',
  categoriaId: 'categoriaId'
};

exports.Prisma.PlataformaXJuegoScalarFieldEnum = {
  id: 'id',
  juegoId: 'juegoId',
  plataformaId: 'plataformaId'
};

exports.Prisma.CatNoticiaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.CatNoticiaXNoticiaScalarFieldEnum = {
  id: 'id',
  noticiaId: 'noticiaId',
  catNoticiaId: 'catNoticiaId'
};

exports.Prisma.ResenaScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  juegoId: 'juegoId',
  fechaCreacion: 'fechaCreacion',
  texto: 'texto',
  puntuacion: 'puntuacion'
};

exports.Prisma.CarritoScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  juegoId: 'juegoId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Rol = exports.$Enums.Rol = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Juego: 'Juego',
  Noticia: 'Noticia',
  Foto: 'Foto',
  Categoria: 'Categoria',
  Plataforma: 'Plataforma',
  Venta: 'Venta',
  JuegoXVenta: 'JuegoXVenta',
  JuegoXUsuario: 'JuegoXUsuario',
  Clave: 'Clave',
  CategoriaXJuego: 'CategoriaXJuego',
  PlataformaXJuego: 'PlataformaXJuego',
  CatNoticia: 'CatNoticia',
  CatNoticiaXNoticia: 'CatNoticiaXNoticia',
  Resena: 'Resena',
  Carrito: 'Carrito'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
